"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["688"],{2092:function(e,t,r){r.r(t),r.d(t,{default:()=>p,frontMatter:()=>l,metadata:()=>n,assets:()=>a,toc:()=>u,contentTitle:()=>c});var n=JSON.parse('{"id":"infrastructure/getting-started/basic-knowledge/index","title":"Basic Knowledge","description":"Overview","source":"@site/docs/infrastructure/02-getting-started/basic-knowledge/index.md","sourceDirName":"infrastructure/02-getting-started/basic-knowledge","slug":"/infrastructure/getting-started/basic-knowledge/","permalink":"/docs/infrastructure/getting-started/basic-knowledge/","draft":false,"unlisted":false,"editUrl":"https://github.com/polinetworkorg/docs/tree/main/docs/infrastructure/02-getting-started/basic-knowledge/index.md","tags":[],"version":"current","frontMatter":{"title":"Basic Knowledge"},"sidebar":"infra","previous":{"title":"Setup","permalink":"/docs/infrastructure/getting-started/setup"},"next":{"title":"Terraform","permalink":"/docs/infrastructure/getting-started/basic-knowledge/Terraform"}}'),i=r("6773"),s=r("6070"),o=r("2957");let l={title:"Basic Knowledge"},c=void 0,a={},u=[{value:"Overview",id:"overview",level:2}];function d(e){let t={a:"a",h2:"h2",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(t.p,{children:"This section explains how we organized our infrastructure."}),"\n",(0,i.jsx)(t.p,{children:"Everything regarding the deployment of apps and services is divided into two repositories:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/polinetworkorg/terraform",children:"polinetworkorg/terraform"})," - Contains the Terraform code to deploy the infrastructure. This defines the resources that are created on Azure, from specific things like KeyVaults, to the Kubernetes cluster itself."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/polinetworkorg/polinetwork-cd",children:"polinetworkorg/polinetwork-cd"})," - Our GitOps repo, contains the manifests that define deployments specific for each app or service. This repository is connected to the ArgoCD instance running on the Kubernetes cluster."]}),"\n"]}),"\n",(0,i.jsx)(t.mermaid,{value:'flowchart TD\n  subgraph Github\n    tf([**terraform**])\n    cd([**polinetwork-cd**])\n  end\n  subgraph Azure\n    vm[VMs and other resources]\n    subgraph k8s[K8S cluster]\n      argocd[ArgoCD]\n      app@{ shape: processes, label: "Apps / Services" }\n    end\n  end\n\n  tf -.-> vm\n  tf -.-> k8s\n  vm <--\x3e k8s\n  cd <-.-> argocd --\x3e app'}),"\n",(0,i.jsx)(o.Z,{})]})}function p(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},2957:function(e,t,r){r.d(t,{Z:()=>w});var n=r("6773");r("1699");var i=r("4461"),s=r("9085"),o=r("2836"),l=r("4795"),c=r("81"),a=r("8106"),u=r("4625");let d={cardContainer:"cardContainer_SHSZ",cardTitle:"cardTitle_Btbp",cardDescription:"cardDescription_fk0k"};function p(e){let{href:t,children:r}=e;return(0,n.jsx)(o.Z,{href:t,className:(0,i.Z)("card padding--lg",d.cardContainer),children:r})}function f(e){let{href:t,icon:r,title:s,description:o}=e;return(0,n.jsxs)(p,{href:t,children:[(0,n.jsxs)(u.Z,{as:"h2",className:(0,i.Z)("text--truncate",d.cardTitle),title:s,children:[r," ",s]}),o&&(0,n.jsx)("p",{className:(0,i.Z)("text--truncate",d.cardDescription),title:o,children:o})]})}function h(e){let{item:t}=e,r=(0,s.LM)(t),i=function(){let{selectMessage:e}=(0,l.c)();return t=>e(t,(0,a.I)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t}))}();return r?(0,n.jsx)(f,{href:r,icon:"\uD83D\uDDC3\uFE0F",title:t.label,description:t.description??i(t.items.length)}):null}function m(e){let{item:t}=e,r=(0,c.Z)(t.href)?"\uD83D\uDCC4\uFE0F":"\uD83D\uDD17",i=(0,s.xz)(t.docId??void 0);return(0,n.jsx)(f,{href:t.href,icon:r,title:t.label,description:t.description??i?.description})}function g(e){let{item:t}=e;switch(t.type){case"link":return(0,n.jsx)(m,{item:t});case"category":return(0,n.jsx)(h,{item:t});default:throw Error(`unknown item type ${JSON.stringify(t)}`)}}function x(e){let{className:t}=e,r=(0,s.jA)();return(0,n.jsx)(w,{items:r.items,className:t})}function w(e){let{items:t,className:r}=e;if(!t)return(0,n.jsx)(x,{...e});let o=(0,s.MN)(t);return(0,n.jsx)("section",{className:(0,i.Z)("row",r),children:o.map((e,t)=>(0,n.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,n.jsx)(g,{item:e})},t))})}},4795:function(e,t,r){r.d(t,{c:function(){return c}});var n=r(1699),i=r(6157);let s=["zero","one","two","few","many","other"];function o(e){return s.filter(t=>e.includes(t))}let l={locale:"en",pluralForms:o(["one","other"]),select:e=>1===e?"one":"other"};function c(){let e=function(){let{i18n:{currentLocale:e}}=(0,i.Z)();return(0,n.useMemo)(()=>{try{return function(e){let t=new Intl.PluralRules(e);return{locale:e,pluralForms:o(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".
Docusaurus will fallback to the default (English) implementation.
Error: ${t.message}
`),l}},[e])}();return{selectMessage:(t,r)=>(function(e,t,r){let n=e.split("|");if(1===n.length)return n[0];n.length>r.pluralForms.length&&console.error(`For locale=${r.locale}, a maximum of ${r.pluralForms.length} plural forms are expected (${r.pluralForms.join(",")}), but the message contains ${n.length}: ${e}`);let i=r.select(t);return n[Math.min(r.pluralForms.indexOf(i),n.length-1)]})(r,t,e)}}},6070:function(e,t,r){r.d(t,{Z:function(){return l},a:function(){return o}});var n=r(1699);let i={},s=n.createContext(i);function o(e){let t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);